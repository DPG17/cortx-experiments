General {
    #file system path to be monitored by robinhood
    fs_path = "/mnt/src_container_mnt";
    # filesystem type, as displayed by 'mount' (e.g. ext4, xfs, lustre, ...)
    fs_type = fuse.daos;
}

FS_Scan {
    # daily scan
 	scan_interval = 1d;
}

fileclass all_object {
    definition { size > 0 }
}

fileclass big_object {
     definition { size > 1MB }
}

fileclass small_object {
     definition { size < 1MB}
}


#POLICY1: daos_to_cortx_archive -- aws s3 mv
define_policy daos_to_cortx_archive{
     status_manager = none;
     scope=all;
     default_action = cmd("aws s3 ls");
     default_lru_sort_attr = none;
}

daos_to_cortx_archive_rules{
    rule big_movement{
	    target_fileclass = big_object;
	    action = cmd("aws s3 mv /mnt/src_container_mnt/{name} s3://daos-bucket");
	    condition { last_access < 1d }
    }
}

#POLICY2: cortx_to_daos_restore -- aws s3 mv from bucket to daos container
define_policy cortx_to_daos_restore{
     status_manager = none;
     scope=all;
     default_action = cmd("aws s3 ls");
     default_lru_sort_attr = none;
}

cortx_to_daos_restore_rules{
    rule s3_move_operation{
	    target_fileclass = all_object;
	    action = cmd("aws s3 mv s3://daos-bucket/ /mnt/dest_container_mnt/ --recursive");
	    condition { last_access < 1d }
    }
}

Log {
    log_file = "/var/log/robinhood.log";
    report_file = "/var/log/robinhood_actions.log";
    alert_file = "/var/log/robinhood_alerts.log";
}

ListManager {
    MySQL {
        server = localhost;
        db = rbh_fsname;
        user = robinhood;
        password_file = /etc/robinhood.d/.dbpassword;
    }
}

# Lustre 2.x only
ChangeLog {
    MDT {
        mdt_name = "MDT0000";
        reader_id = "cl1";
    }
}

# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:
